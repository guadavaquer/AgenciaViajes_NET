// <auto-generated />
using System;
using AgenciaDeViajes;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AgenciaDeViajes.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231121052826_Modificacion-seed-v1")]
    partial class Modificacionseedv1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AgenciaDeViajes.Ciudad", b =>
                {
                    b.Property<int?>("idCiudad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idCiudad"));

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.HasKey("idCiudad");

                    b.ToTable("Ciudades", (string)null);

                    b.HasData(
                        new
                        {
                            idCiudad = 1,
                            nombre = "Buenos Aires"
                        },
                        new
                        {
                            idCiudad = 2,
                            nombre = "Berlin"
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.Hotel", b =>
                {
                    b.Property<int?>("idHotel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idHotel"));

                    b.Property<int?>("capacidad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("costo")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<int?>("idCiudad")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.HasKey("idHotel");

                    b.HasIndex("idCiudad");

                    b.ToTable("Hoteles", (string)null);

                    b.HasData(
                        new
                        {
                            idHotel = 1,
                            capacidad = 150,
                            costo = 25000.0,
                            idCiudad = 1,
                            nombre = "Four Seasons"
                        },
                        new
                        {
                            idHotel = 2,
                            capacidad = 200,
                            costo = 15000.0,
                            idCiudad = 2,
                            nombre = "Gat Point Charlie"
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.ReservaHotel", b =>
                {
                    b.Property<int?>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("idHotel")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fechaDesde")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("fechaHasta")
                        .IsRequired()
                        .HasColumnType("datetime");

                    b.Property<int?>("pagado")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("idUsuario", "idHotel");

                    b.HasIndex("idHotel");

                    b.ToTable("reservaHoteles");

                    b.HasData(
                        new
                        {
                            idUsuario = 2,
                            idHotel = 1,
                            fechaDesde = new DateTime(2023, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            fechaHasta = new DateTime(2023, 6, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            pagado = 1
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.ReservaVuelo", b =>
                {
                    b.Property<int?>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("idVuelo")
                        .HasColumnType("int");

                    b.Property<int?>("pagado")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("idUsuario", "idVuelo");

                    b.HasIndex("idVuelo");

                    b.ToTable("reservaVuelos");

                    b.HasData(
                        new
                        {
                            idUsuario = 2,
                            idVuelo = 1,
                            pagado = 1
                        },
                        new
                        {
                            idUsuario = 2,
                            idVuelo = 2,
                            pagado = 1
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.Usuario", b =>
                {
                    b.Property<int?>("idUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idUsuario"));

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("bloqueado")
                        .HasColumnType("bit");

                    b.Property<double?>("credito")
                        .HasColumnType("float");

                    b.Property<int?>("dni")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("esAdmin")
                        .HasColumnType("bit");

                    b.Property<int?>("intentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("mail")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("idUsuario");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            idUsuario = 1,
                            apellido = "Administrador",
                            bloqueado = false,
                            credito = 0.0,
                            dni = 11222333,
                            esAdmin = true,
                            intentosFallidos = 0,
                            mail = "admin@agencia",
                            nombre = "Admin",
                            password = "12345"
                        },
                        new
                        {
                            idUsuario = 2,
                            apellido = "Usuario",
                            bloqueado = false,
                            credito = 15000.0,
                            dni = 22333444,
                            esAdmin = false,
                            intentosFallidos = 1,
                            mail = "user@agencia",
                            nombre = "User",
                            password = "56789"
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.Vuelo", b =>
                {
                    b.Property<int?>("idVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("idVuelo"));

                    b.Property<string>("aerolinea")
                        .IsRequired()
                        .HasColumnType("varchar(512)");

                    b.Property<string>("avion")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<int?>("capacidad")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<double?>("costo")
                        .IsRequired()
                        .HasColumnType("float");

                    b.Property<DateTime?>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<int?>("idCiudadDestino")
                        .HasColumnType("int");

                    b.Property<int?>("idCiudadOrigen")
                        .HasColumnType("int");

                    b.HasKey("idVuelo");

                    b.HasIndex("idCiudadDestino");

                    b.HasIndex("idCiudadOrigen");

                    b.ToTable("Vuelos", (string)null);

                    b.HasData(
                        new
                        {
                            idVuelo = 1,
                            aerolinea = "Aero",
                            avion = "LF-5909",
                            capacidad = 150,
                            costo = 600000.0,
                            idCiudadDestino = 2,
                            idCiudadOrigen = 1
                        },
                        new
                        {
                            idVuelo = 2,
                            aerolinea = "Aero",
                            avion = "LF-9501",
                            capacidad = 150,
                            costo = 650000.0,
                            idCiudadDestino = 1,
                            idCiudadOrigen = 2
                        });
                });

            modelBuilder.Entity("AgenciaDeViajes.Hotel", b =>
                {
                    b.HasOne("AgenciaDeViajes.Ciudad", "ciudad")
                        .WithMany("hoteles")
                        .HasForeignKey("idCiudad")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("ciudad");
                });

            modelBuilder.Entity("AgenciaDeViajes.ReservaHotel", b =>
                {
                    b.HasOne("AgenciaDeViajes.Hotel", "hotel")
                        .WithMany("reservas")
                        .HasForeignKey("idHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaDeViajes.Usuario", "usuario")
                        .WithMany("reservasHoteles")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hotel");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("AgenciaDeViajes.ReservaVuelo", b =>
                {
                    b.HasOne("AgenciaDeViajes.Usuario", "usuario")
                        .WithMany("reservasVuelos")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AgenciaDeViajes.Vuelo", "vuelo")
                        .WithMany("reservas")
                        .HasForeignKey("idVuelo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("usuario");

                    b.Navigation("vuelo");
                });

            modelBuilder.Entity("AgenciaDeViajes.Vuelo", b =>
                {
                    b.HasOne("AgenciaDeViajes.Ciudad", "destino")
                        .WithMany("vuelosDestino")
                        .HasForeignKey("idCiudadDestino")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("AgenciaDeViajes.Ciudad", "origen")
                        .WithMany("vuelosOrigen")
                        .HasForeignKey("idCiudadOrigen")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("destino");

                    b.Navigation("origen");
                });

            modelBuilder.Entity("AgenciaDeViajes.Ciudad", b =>
                {
                    b.Navigation("hoteles");

                    b.Navigation("vuelosDestino");

                    b.Navigation("vuelosOrigen");
                });

            modelBuilder.Entity("AgenciaDeViajes.Hotel", b =>
                {
                    b.Navigation("reservas");
                });

            modelBuilder.Entity("AgenciaDeViajes.Usuario", b =>
                {
                    b.Navigation("reservasHoteles");

                    b.Navigation("reservasVuelos");
                });

            modelBuilder.Entity("AgenciaDeViajes.Vuelo", b =>
                {
                    b.Navigation("reservas");
                });
#pragma warning restore 612, 618
        }
    }
}
